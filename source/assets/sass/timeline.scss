$timeline-numDots: 20;
$timeline-parentWidthBase: 0.8;
$timeline-parentWidth: $timeline-parentWidthBase * 100vw;
$timeline-parentMaxWidth: 1000px;
$timeline-dotWidth: 25px;
$timeline-active: $blue;
$timeline-inactive: $gray-600;

.timeline {
  h1 {
  	text-align: center;
  	height: 38px;
  	margin: 60px 0;
  	span {
  		white-space: nowrap;
    }
  }

  .flex-parent {
  	display: flex;
  	flex-direction: column;
  	justify-content: center;
  	align-items: center;
  	width: 100%;
  	height: 100%;
  	min-height: 500px;
  }

  .input-flex-container {
  	display: flex;
  	justify-content: space-around;
  	align-items: center;
  	flex-wrap: wrap;
  	width: $timeline-parentWidth;
  	max-width: $timeline-parentMaxWidth;
  	position: relative;
  	z-index: 0;
  	margin-left: calc((#{$timeline-parentWidth} - #{$timeline-dotWidth}) / #{$timeline-numDots}); //make up for offset of .dot-info
  }

  input {
  	width: $timeline-dotWidth;
  	height: $timeline-dotWidth;
  	background-color: $timeline-active;
  	position: relative;
  	border-radius: 50%;
  	display: block;
  	-moz-appearance: none;
  	-webkit-appearance: none;
  	appearance: none;
  	cursor: pointer;

  	&:focus {
  		outline: none;
    }

  	&::before, &::after {
  		content: '';
  		display: block;
  		position: absolute;
  		z-index: -1;
  		top: 50%;
  		transform: translateY(-50%);
  		background-color: $timeline-active;
  		width: $timeline-parentWidth / $timeline-numDots;
  		height: 5px;
  		max-width: $timeline-parentMaxWidth / $timeline-numDots;
    }

  	&::before {
  		left: calc(#{-$timeline-parentWidth / $timeline-numDots} + #{$timeline-dotWidth / 2});
    }

  	&::after {
  		right: calc(#{-$timeline-parentWidth / $timeline-numDots} + #{$timeline-dotWidth / 2});
    }

  	&:checked {
  		background-color: $timeline-active;

  		&::before {
  			background-color: $timeline-active;
      }

  		&::after {
  			background-color: $timeline-inactive;
      }
    }

  	&:checked {
  		~ input {
  			&, &::before, &::after {
  				background-color: $timeline-inactive;
        }
      }

  		+ .dot-info {
  			span {
  				font-size: 13px;
  				font-weight: bold;
        }
      }
    }
  }

  .dot-info {
  	width: $timeline-dotWidth;
  	height: $timeline-dotWidth;
  	display: block;
  	visibility: hidden;
  	position: relative;
  	z-index: -1;
  	//position each span on top of the dot immediately before it; -1px at the end is just fudging the numbers for rounding error
  	left: calc((((#{$timeline-parentWidth} - #{$timeline-dotWidth}) / #{$timeline-numDots}) * -1) - 1px);

  	span {
  		visibility: visible;
  		position: absolute;
  		font-size: 12px;

  		&.year {
  			bottom: -30px;
  			left: 50%;
  			transform: translateX(-50%);
      }

  		&.label {
  			top: -65px;
  			left: 0;
  			transform: rotateZ(-45deg);
  			width: 70px;
  			text-indent: -10px;
      }
    }
  }

  $descriptions: 'desc0', 'desc1', 'desc2', 'desc3', 'desc4', 'desc5', 'desc6', 'desc7', 'desc8', 'desc9';

  @each $desc in $descriptions {
  	input[data-description="#{$desc}"]:checked ~ .timeline-descriptions-wrapper {
  		p[data-description="#{$desc}"] {
  			display: block
      }
    }
  }


  .timeline-descriptions-wrapper {
  	width: 100%;
  	margin-top: 70px;
  	font-size: 22px;
  	font-weight: 400;
  	margin-left: calc((-#{$timeline-parentWidth} - #{$timeline-dotWidth}) / #{$timeline-numDots}); //make up for offset of .dot-info
    text-align: center;

  	p {
  		margin-top: 0;
  		display: none;
    }
  }

  @media (min-width: $timeline-parentMaxWidth / $timeline-parentWidthBase) {
  	.input-flex-container {
  		margin-left: #{($timeline-parentMaxWidth / $timeline-numDots) + ($timeline-dotWidth / 2)};
    }

  	input {
  		&::before {
  			left: #{-($timeline-parentMaxWidth / $timeline-numDots) + ($timeline-dotWidth / 2)};
      }

  		&::after {
  			right: #{-($timeline-parentMaxWidth / $timeline-numDots) + ($timeline-dotWidth / 2)};
      }
    }

  	.dot-info {
  		left: calc((((#{$timeline-parentMaxWidth} - #{$timeline-dotWidth}) / #{$timeline-numDots}) * -1) - 1px);
    }

  	.timeline-descriptions-wrapper {
  		margin-left: #{-($timeline-parentMaxWidth / $timeline-numDots) + ($timeline-dotWidth / 2)};
    }
  }


  @media (max-width: 630px) {
  	.flex-parent {
  		justify-content: initial;
    }

  	.input-flex-container {
  		flex-wrap: wrap;
  		justify-content: center;
  		width: 400px;
  		height: auto;
  		margin-top: 15vh;
  		margin-left: 0;
  		padding-bottom: 30px;
    }

  	input, .dot-info {
  		width: 60px;
  		height: 60px;
  		margin: 0 10px 50px;
    }

  	input {
  		background-color: transparent !important;
  		z-index: 1;

  		&::before, &::after {
  			content: none;
      }

  		&:checked {
  			+ .dot-info {
  				background-color: $timeline-active;

  				span {
  					&.year {
  						font-size: 14px;
            }

  					&.label {
  						font-size: 12px;
            }
          }
        }
      }
    }
  	.dot-info {
  		visibility: visible;
  		border-radius: 50%;
  		z-index: 0; // position behind input, so input remains clickable
  		left: 0;
  		margin-left: -70px;
  		background-color: $timeline-inactive;

  		span {
  			&.year {
  				top: 0;
  				left: 0;
  				transform: none;
  				width: 100%;
  				height: 100%;
  				display: flex;
  				justify-content: center;
  				align-items: center;
  				color: #ECF0F1;
        }

  			&.label {
  				top: calc(100% + 5px);
  				left: 50%;
  				transform: translateX(-50%);
  				text-indent: 0;
  				text-align: center;
        }
      }
    }

  	.timeline-descriptions-wrapper {
  		margin-top: 30px;
  		margin-left: 0;
  		text-align: center;
    }
  }

  @media (max-width: 480px) {
  	.input-flex-container {
  		width: 340px;
    }
  }

  @media (max-width: 400px) {
  	.input-flex-container {
  		width: 300px;
    }
  }
}
